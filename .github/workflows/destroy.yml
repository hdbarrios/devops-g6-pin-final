name: Terraform Destroy
on:
 workflow_dispatch:
   branches:
     - master

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest
    env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_REGION: 'us-east-1'
       TERRAFORM_VERSION: "1.10.2"

    steps:
    - uses: actions/checkout@v4
      with:
         ref: ${{ github.sha }} # github.sha hace referencia al commit hash del evento actual, que es el commit específico que activó el workflow. En el caso de un push o un pull_request, este es el commit que causó que el workflow se ejecutara.
         submodules: true
         fetch-depth: 1

    - name: Destroy Namespaces
      run: |
       curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
       unzip awscliv2.zip
       sudo ./aws/install --update
       aws eks update-kubeconfig --name mundos-e --region us-east-1
       aws ec2 describe-instances --query "Reservations[*].Instances[*].[InstanceId, InstanceType, State.Name, PublicIpAddress, PrivateIpAddress]" --output table
       aws eks describe-cluster --name mundos-e --region us-east-1 --query "cluster.accessConfig"

       echo "EKS Nodes:"
       kubectl get nodes -o wide
 
       echo "Destroy Apps:"
       kubectl delete namespace mundose --force
       kubectl delete namespace grafana --force
       kubectl delete namespace prometheus --force


    - name: Install Terraform
      run: |
        tf_version=$TERRAFORM_VERSION
        wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        unzip terraform_"$tf_version"_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
           
    - name: Verify Terraform version
      run: terraform version

    - name: Terraform init
      run: |
        terraform init -input=false

    - name: Terraform validation
      run: |
        terraform validate

    - name: Terraform destroy
      id: destroy
      run: |
        terraform destroy -var-file=profiles/pinf.tfvars -auto-approve

